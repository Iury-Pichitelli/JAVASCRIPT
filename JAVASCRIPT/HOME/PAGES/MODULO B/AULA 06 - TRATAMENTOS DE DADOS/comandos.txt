<h2>Comandos:</h2>

<pre>
var nome = window.prompt('Qual e o seu nome?')
window.alert("É um prazer:" + nome)
("É um prazer:" + nome) = O '+' tem a função de concatenação
Ex: (number + number) para adição
(string + string) para concatenação

< ============================================================================ >

o comando 'prompt' sempre recebe um valor string independente do valor numérico ou não

Para converter uma string numérica do prompt para number devemos usar o comando:

Para inteiro:
Number.parseInt(n)

Para Flutuante:
Number.parseFloat(n)

Colocar Number(n) = o sistema vai identificar de forma automática

> Quando Usar Cada Um?

 Use Number() quando:
✔ Precisa de conversão rápida e direta.
✔ A entrada pode ter valores decimais.
✔ Precisa garantir que entradas inválidas resultem em NaN.

 Use parseInt() quando:
✔ Precisa converter apenas a parte inteira de um número.
✔ Trabalha com diferentes bases numéricas (ex.: binário, hexadecimal).
✔ Pode receber strings que misturam números e letras e deseja extrair apenas a parte numérica inicial.

Se o código for grande e houver muitas conversões, o impacto de parseInt() pode ser notável, e Number() será a melhor escolha na maioria dos casos.

< ============================================================================ >

O Java script é case sensitive
NaN = not a number

< ============================================================================ >
Para string

String(n)
n.toString()

< ============================================================================ >

var s = 'JavaScript'
alert('Eu estou aprendendo s') = 'Eu estou aprendendo s' // não faz interpolação
alert('Eu estou aprendendo '+ s) = 'Eu estou aprendendo JavaScript' // usa concatenação
alert(`Eu estou aprendendo ${s}`) = 'Eu estou aprendendo JavaScript' //usa template string
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ = tem que usar crase

< ============================================================================ >

var s = 'JavaScript'

s.length = conta quantos caracteres tem a string
s.toUpperCase() = coloca em maiúsculas as strings
s.toLowerCase() = coloca em minúsculas as strings

< ============================================================================ >
< ============================================================================ >
< ============================================================================ >
< ============================================================================ >

</pre><hr>